{"version":3,"file":"component---src-pages-using-typescript-tsx-14b67e8d7310dd714f51.js","mappings":"qNAaA,MA+BaA,EAA0B,IAAMC,EAAAA,cAACC,EAAAA,EAAG,CAACC,MAAM,qBAExD,UAjCwDC,IAAAA,IAAC,KACvDC,EAAI,KACJC,EAAI,SACJC,GACD,SACCN,EAAAA,cAACO,EAAAA,EAAM,CAACL,MAAM,mBAAmBI,SAAUA,GACzCN,EAAAA,cAAAA,KAAAA,KAAI,0CACJA,EAAAA,cAAAA,IAAAA,KAAG,4CACwC,4BAAM,YAAe,0CAClC,4BAAM,YAAe,qCACzC,4BAAM,oBAAuB,MAEvCA,EAAAA,cAAAA,IAAAA,KAAG,4CACwC,0BAAI,cAAe,oBACxD,0BAAI,cAAe,gBAAa,0BAAI,YAAa,UAEvDA,EAAAA,cAAAA,IAAAA,KAAG,kCAC8BK,EAAK,uBAAqB,IACxDD,EAAKI,KAAKC,UAAU,KAEvBT,EAAAA,cAAAA,IAAAA,KAAG,kCAC+B,IAChCA,EAAAA,cAAAA,IAAAA,CAAGU,KAAK,yEAAwE,kCAE5E,KAGNV,EAAAA,cAACW,EAAAA,KAAI,CAACC,GAAG,KAAI,2BACN,C,+ECzCX,EAAe,IAA0B,oECgBzC,MAXoB,IAChB,uBAAKC,UCJkB,4CDKnB,yBAAOC,UAAQ,EAACC,OAAK,EAACC,MAAI,EAACH,UCHhB,oCDIP,0BAAQI,IAAKC,EAAmBC,KAAK,eAEzC,gBAAC,EAAAR,KAAI,CAACC,GAAG,IAAIC,UCPC,uCDQV,uBAAKI,IAAI,iBAAiBG,IAAI,UAAUP,UCVnC,qCCDjB,EAAe,IAA0B,0DCyBzC,MArBe,IACb,0BAAQA,UCJa,mCDKnB,uBAAKA,UCFkB,uCDGrB,uBAAKI,IAAKI,EAAaD,IAAI,UAAUP,UCL1B,+BDOb,sBAAIA,UCNoB,wCDOtB,0BACE,qBAAGH,KAAK,yBAAyBY,OAAO,UAAS,eAInD,0BACE,qBAAGZ,KAAK,0CAA0CY,OAAO,UAAS,iBAIpE,0BAAI,sCEnBCC,EAAO,6BCelB,MAXe,IAAuC,IAAtC,SAAEjB,EAAQ,SAAEkB,KAAaC,GAAO,EAE7C,OACC,uCAASA,EAAK,CAAEZ,UAAW,CAACa,EAAaD,EAAMZ,WAAWc,KAAK,OAC7D,gBAAC,EAAW,MACXH,EACD,gBAAC,EAAM,MACH,C,+CCqCV,IAvCY,IAAuC,IAAD,UAArC,YAAEI,EAAW,MAAE1B,EAAK,SAAEsB,GAAU,EAC3C,MAAM,KAAEhB,IAASqB,EAAAA,EAAAA,gBAAe,cAgB1BC,EAAkBF,GAAepB,EAAKuB,aAAaH,YACnDI,EAAgC,QAApB,EAAGxB,EAAKuB,oBAAY,aAAjB,EAAmB7B,MAExC,OACE,gCACE,6BAAQ8B,EAAkB9B,EAAK,MAAM8B,EAAiB9B,GACtD,wBAAM+B,KAAK,cAAcC,QAASJ,IAClC,wBAAMK,SAAS,WAAWD,QAAShC,IACnC,wBAAMiC,SAAS,iBAAiBD,QAASJ,IACzC,wBAAMK,SAAS,UAAUD,QAAQ,YACjC,wBAAMD,KAAK,eAAeC,QAAQ,YAClC,wBACED,KAAK,kBACLC,SAA0B,QAAjB,EAAA1B,EAAKuB,oBAAY,OAAQ,QAAR,EAAjB,EAAmBK,cAAM,WAAR,EAAjB,EAA2BC,UAAO,KAE7C,wBAAMJ,KAAK,gBAAgBC,QAAShC,IACpC,wBAAM+B,KAAK,sBAAsBC,QAASJ,IACzCN,EACA,C","sources":["webpack://gatsby-starter-blog/./src/pages/using-typescript.tsx","webpack://gatsby-starter-blog/./src/components/LogoDisplay/backgroundTextureDark.mp4","webpack://gatsby-starter-blog/./src/components/LogoDisplay/index.js","webpack://gatsby-starter-blog/./src/components/LogoDisplay/LogoDisplay.module.css","webpack://gatsby-starter-blog/./src/components/Footer/telenorLogo.png","webpack://gatsby-starter-blog/./src/components/Footer/index.js","webpack://gatsby-starter-blog/./src/components/Footer/Footer.module.css","webpack://gatsby-starter-blog/./src/components/Layout/styles.module.css","webpack://gatsby-starter-blog/./src/components/Layout/index.js","webpack://gatsby-starter-blog/./src/components/seo.js"],"sourcesContent":["// If you don't want to use TypeScript you can delete this file!\nimport * as React from \"react\"\nimport { PageProps, Link, graphql, HeadFC } from \"gatsby\"\n\nimport Layout from \"../components/Layout\"\nimport Seo from \"../components/seo\"\n\ntype DataProps = {\n  site: {\n    buildTime: string\n  }\n}\n\nconst UsingTypescript: React.FC<PageProps<DataProps>> = ({\n  data,\n  path,\n  location,\n}) => (\n  <Layout title=\"Using TypeScript\" location={location}>\n    <h1>Gatsby supports TypeScript by default!</h1>\n    <p>\n      This means that you can create and write <code>.ts/.tsx</code> files for\n      your pages, components, and <code>gatsby-*</code> configuration files (for\n      example <code>gatsby-config.ts</code>).\n    </p>\n    <p>\n      For type checking you'll want to install <em>typescript</em> via npm and\n      run <em>tsc --init</em> to create a <em>tsconfig</em> file.\n    </p>\n    <p>\n      You're currently on the page \"{path}\" which was built on{\" \"}\n      {data.site.buildTime}.\n    </p>\n    <p>\n      To learn more, head over to our{\" \"}\n      <a href=\"https://www.gatsbyjs.com/docs/how-to/custom-configuration/typescript/\">\n        documentation about TypeScript\n      </a>\n      .\n    </p>\n    <Link to=\"/\">Go back to the homepage</Link>\n  </Layout>\n)\n\nexport const Head: HeadFC<DataProps> = () => <Seo title=\"Using TypeScript\" />\n\nexport default UsingTypescript\n\nexport const query = graphql`\n  {\n    site {\n      buildTime(formatString: \"YYYY-MM-DD hh:mm a z\")\n    }\n  }\n`\n","export default __webpack_public_path__ + \"static/backgroundTextureDark-36e6dde910c8caf7aa7a406f45af4253.mp4\";","import React from \"react\";\nimport * as styles from \"./LogoDisplay.module.css\"\nimport { Link } from \"gatsby\"\nimport backgroundTexture from \"./backgroundTextureDark.mp4\"\n\nconst LogoDisplay = () => (\n    <div className={styles.logoContainer}>\n        <video autoPlay muted loop className={styles.video}>\n            <source src={backgroundTexture} type=\"video/mp4\" />\n        </video>\n        <Link to=\"/\" className={styles.logoFlex}>\n            <img src=\"/logoWhite.png\" alt=\"Telenor\" className={styles.img} />\n        </Link>\n    </div>\n);\n\nexport default LogoDisplay;\n","// extracted by mini-css-extract-plugin\nexport var img = \"LogoDisplay-module--img--0f5b6\";\nexport var logoContainer = \"LogoDisplay-module--logoContainer--12e14\";\nexport var logoFlex = \"LogoDisplay-module--logoFlex--81626\";\nexport var video = \"LogoDisplay-module--video--459f9\";","export default __webpack_public_path__ + \"static/telenorLogo-07ed61ec51227205b36f8e75e07429dd.png\";","import React from \"react\"\nimport * as styles from \"./Footer.module.css\"\nimport telenorLogo from \"./telenorLogo.png\"\n\nconst Footer = () => (\n  <footer className={styles.container}>\n    <div className={styles.logoContainer}>\n      <img src={telenorLogo} alt=\"Telenor\" className={styles.img} />\n    </div>\n    <ul className={styles.linksContainer}>\n      <li>\n        <a href=\"https://www.telenor.no\" target=\"_blank\">\n            Telenor.no\n        </a>\n      </li>\n      <li>\n        <a href=\"https://www.telenor.no/om/jobbitelenor/\" target=\"_blank\">\n          Jobb hos oss\n        </a>\n      </li>\n      <li>Tilgjengelighetserkl√¶ring (TODO)</li>\n    </ul>\n  </footer>\n)\n\nexport default Footer\n","// extracted by mini-css-extract-plugin\nexport var container = \"Footer-module--container--01486\";\nexport var img = \"Footer-module--img--89d7e\";\nexport var linksContainer = \"Footer-module--linksContainer--30e60\";\nexport var logoContainer = \"Footer-module--logoContainer--97753\";","// extracted by mini-css-extract-plugin\nexport var main = \"styles-module--main--177c8\";","import * as React from \"react\"\nimport LogoDisplay from \"../LogoDisplay\"\nimport Footer from \"../Footer\"\nimport * as styles from \"./styles.module.css\"\n\nconst Layout = ({ location, children, ...props }) => {\n// className=\"global-wrapper\" \n   return (\n    <div {...props} className={[styles.main, props.className].join(\" \")}>\n      <LogoDisplay />\n      {children}\n      <Footer />\n    </div>\n  )\n}\n\nexport default Layout\n","/**\n * SEO component that queries for data with\n * Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nconst Seo = ({ description, title, children }) => {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            social {\n              twitter\n            }\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n  const defaultTitle = site.siteMetadata?.title\n\n  return (\n    <>\n      <title>{defaultTitle ? `${title} | ${defaultTitle}` : title}</title>\n      <meta name=\"description\" content={metaDescription} />\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={metaDescription} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta name=\"twitter:card\" content=\"summary\" />\n      <meta\n        name=\"twitter:creator\"\n        content={site.siteMetadata?.social?.twitter || ``}\n      />\n      <meta name=\"twitter:title\" content={title} />\n      <meta name=\"twitter:description\" content={metaDescription} />\n      {children}\n    </>\n  )\n}\n\nexport default Seo\n"],"names":["Head","React","Seo","title","_ref","data","path","location","Layout","site","buildTime","href","Link","to","className","autoPlay","muted","loop","src","backgroundTexture","type","alt","telenorLogo","target","main","children","props","styles","join","description","useStaticQuery","metaDescription","siteMetadata","defaultTitle","name","content","property","social","twitter"],"sourceRoot":""}